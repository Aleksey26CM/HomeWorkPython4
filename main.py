# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.
import random

# n = int(input("Введите длину массива №1: "))
# m = int(input("Введите длину массива №1: "))
#
# a = [random.randint(1,30) for i in range(n)]
# b = [random.randint(1,30) for i in range(m)]
# c = []
#
# print(f'Список №1 - {a}\nСписок № 2{b}')
#
# for i in range(len(a)):
#     for j in range(len(b)):
#         if a[i] == b[j]:
#             c.append(b[j])
#
# print(set(c))


# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.


n = 15 #int(input("Введите кол-во кустов: "))
m = [45, 8, 3, 45, 8, 6, 24, 24, 23, 10, 6, 42, 1, 37, 46] #[random.randint(1,50) for i in range(n)]
print(m)
c = []
for i in range(len(m)):
    if i == 0:
        max1 = m[-1] + m[i] + m[i+1]
        c.append(max1)
    elif i == 14:
        max1 = m[i-1] + m[i] + m[0]
        c.append(max1)
    else:
        max1 = m[i -1] + m[i] + m[i+1]
        c.append(max1)

print(c)
print(f'Лучше всего начать сбор с куста № {c.index(max(c))+1}, т.к. будет самое большое кол-во ягод - {max(c)}')